const t=JSON.parse('{"key":"v-a6973b0a","path":"/Notebook/Rust/Trait.html","title":"Trait","lang":"zh-CN","frontmatter":{"title":"Trait","category":["笔记","Rust"],"description":"什么是 Trait? Trait 告诉编译器: 某种类型具有那些功能 Trait 抽象地定义共享行为 Trait bounds(约束): 泛型类型参数指定为实现特定行为的类型 like 接口 定义 Trait 把方法签名放在一起,来实现某种目的所必须的一组行为 关键字: trait 只有方法签名,没有具体实现 trait 可以有多个方法,以;结尾 实现该 trait 的类型必须提供具体的方法实现","head":[["meta",{"property":"og:url","content":"https://skyixx.github.io/Notebook/Rust/Trait.html"}],["meta",{"property":"og:site_name","content":"ColorSky"}],["meta",{"property":"og:title","content":"Trait"}],["meta",{"property":"og:description","content":"什么是 Trait? Trait 告诉编译器: 某种类型具有那些功能 Trait 抽象地定义共享行为 Trait bounds(约束): 泛型类型参数指定为实现特定行为的类型 like 接口 定义 Trait 把方法签名放在一起,来实现某种目的所必须的一组行为 关键字: trait 只有方法签名,没有具体实现 trait 可以有多个方法,以;结尾 实现该 trait 的类型必须提供具体的方法实现"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-29T06:38:08.000Z"}],["meta",{"property":"article:author","content":"ColorSky"}],["meta",{"property":"article:modified_time","content":"2023-08-29T06:38:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Trait\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-29T06:38:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ColorSky\\",\\"url\\":\\"https://ColorSky.fun\\"}]}"]]},"headers":[],"git":{"createdTime":1693243182000,"updatedTime":1693291088000,"contributors":[{"name":"skyixx","email":"ningstars@outlook.com","commits":2}]},"readingTime":{"minutes":1.78,"words":534},"filePathRelative":"Notebook/Rust/Trait.md","localizedDate":"2023年8月28日","excerpt":"<h1> 什么是 Trait?</h1>\\n<ul>\\n<li>Trait 告诉编译器: 某种类型具有那些功能</li>\\n<li>Trait 抽象地定义共享行为</li>\\n<li>Trait bounds(约束): 泛型类型参数指定为实现特定行为的类型</li>\\n<li>like 接口</li>\\n</ul>\\n<h1> 定义 Trait</h1>\\n<ul>\\n<li>把方法签名放在一起,来实现某种目的所必须的一组行为</li>\\n<li>关键字: <code>trait</code></li>\\n<li>只有方法签名,没有具体实现</li>\\n<li>trait 可以有多个方法,以<code>;</code>结尾</li>\\n<li>实现该 trait 的类型必须提供具体的方法实现</li>\\n</ul>","autoDesc":true}');export{t as data};
